constant: (push)

@i
D=A
@SP
A=M
M=D
@SP
M=M+1


(LCL, ARG, THIS, THAT)
pop:

@segment
D=M
@i
D=D+A
@addr
M=D
@SP
M=M-1
A=M
D=M
@addr
A=M
M=D

push:

@segment
D=M
@i
D=D+A
@addr
M=D
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1

temp: (pop)

@SP
M=M-1
A=M
D=M
@R{5+i}
M=D

temp: (push)

@R{5+i}
D=M
@SP
A=M
M=D
@SP
M=M+1

pointer 0, THIS: (push)

@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1

pointer 0, THIS: (pop)

@SP
M=M-1
A=M
D=M
@THIS
M=D

pointer !, THAT: (push)

@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1

pointer 1, THAT: (pop)

@SP
M=M-1
A=M
D=M
@THAT
M=D

static: (push)

@{filename+".i"}
D=M
@SP
A=M
M=D
@SP
M=M+1

static: (pop)

@SP
M=M-1
A=M
D=M
@{filename+".i"}
M=D

add:

@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
M=M+D
@SP
M=M+1

sub:

@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
M=M-D
@SP
M=M+1

neg:

@SP
M=M-1
@SP
A=M
M=-M
@SP
M=M+1

not:

@SP
M=M-1
@SP
A=M
M=!M
@SP
M=M+1

and:

@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
M=D&M
@SP
M=M+1

or: 

@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
M=D|M
@SP
M=M+1